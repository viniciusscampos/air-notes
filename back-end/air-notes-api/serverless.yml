service: air-notes-crud

provider:
  name: aws
  environment:
    DYNAMODB_TABLE: anchor-${opt:stage, self:provider.stage}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE}"

functions:
  create-anchor:
    runtime: nodejs8.10
    handler: createAnchor/handler.createAnchor    
    memorySize: 128
    reservedConcurrency: 2
    events:
      - http: POST anchor/create
  get-anchor:
    runtime: nodejs8.10
    handler: getAnchor/handler.getAnchor  
    memorySize: 128
    reservedConcurrency: 2
    events:
      - http: POST anchor/get
  update-anchor:
    runtime: python3.6
    handler: updateAnchor/handler.updateAnchor    
    memorySize: 128
    reservedConcurrency: 2
    events:
      - http: POST anchor/update

resources:
  Resources:
    notessTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.DYNAMODB_TABLE}
        AttributeDefinitions:
          - AttributeName: anchor
            AttributeType: S
        KeySchema:
          - AttributeName: anchor
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1

plugins:
  - serverless-python-requirements

custom:
  pythonRequirements:
     dockerizePip: false